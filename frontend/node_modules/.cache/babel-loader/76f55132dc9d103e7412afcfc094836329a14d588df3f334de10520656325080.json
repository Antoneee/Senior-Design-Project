{"ast":null,"code":"function DateToDateTimeParser(timeStr) {\n  const [hour, minute] = timeStr.split(\":\");\n  const now = new Date(); // Use the current date or set a specific date as needed\n  now.setHours(parseInt(hour, 10));\n  now.setMinutes(parseInt(minute, 10));\n  now.setSeconds(0); // Optionally set seconds to 0\n  return now;\n}\n_c = DateToDateTimeParser;\nfunction DateTimeToDateParser(timeStr) {\n  const date = new Date(timeStr);\n  const formattedDate = date.toISOString().split(\"T\")[0];\n  return formattedDate;\n}\n_c2 = DateTimeToDateParser;\nexport default {\n  DateToDateTimeParser,\n  DateTimeToDateParser\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"DateToDateTimeParser\");\n$RefreshReg$(_c2, \"DateTimeToDateParser\");","map":{"version":3,"names":["DateToDateTimeParser","timeStr","hour","minute","split","now","Date","setHours","parseInt","setMinutes","setSeconds","_c","DateTimeToDateParser","date","formattedDate","toISOString","_c2","$RefreshReg$"],"sources":["C:/Users/Anthony/Desktop/College/SE 4485/Senior Design Project/project/frontend/src/helpers/DateTimeParser.js"],"sourcesContent":["function DateToDateTimeParser(timeStr) {\r\n  const [hour, minute] = timeStr.split(\":\");\r\n  const now = new Date(); // Use the current date or set a specific date as needed\r\n  now.setHours(parseInt(hour, 10));\r\n  now.setMinutes(parseInt(minute, 10));\r\n  now.setSeconds(0); // Optionally set seconds to 0\r\n  return now;\r\n}\r\n\r\nfunction DateTimeToDateParser(timeStr) {\r\n  const date = new Date(timeStr);\r\n  const formattedDate = date.toISOString().split(\"T\")[0];\r\n  return formattedDate;\r\n}\r\n\r\nexport default { DateToDateTimeParser, DateTimeToDateParser };\r\n"],"mappings":"AAAA,SAASA,oBAAoBA,CAACC,OAAO,EAAE;EACrC,MAAM,CAACC,IAAI,EAAEC,MAAM,CAAC,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;EACzC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;EACxBD,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACN,IAAI,EAAE,EAAE,CAAC,CAAC;EAChCG,GAAG,CAACI,UAAU,CAACD,QAAQ,CAACL,MAAM,EAAE,EAAE,CAAC,CAAC;EACpCE,GAAG,CAACK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,OAAOL,GAAG;AACZ;AAACM,EAAA,GAPQX,oBAAoB;AAS7B,SAASY,oBAAoBA,CAACX,OAAO,EAAE;EACrC,MAAMY,IAAI,GAAG,IAAIP,IAAI,CAACL,OAAO,CAAC;EAC9B,MAAMa,aAAa,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACX,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACtD,OAAOU,aAAa;AACtB;AAACE,GAAA,GAJQJ,oBAAoB;AAM7B,eAAe;EAAEZ,oBAAoB;EAAEY;AAAqB,CAAC;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}