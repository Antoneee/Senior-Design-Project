{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Desktop\\\\College\\\\se 4485\\\\Senior Design Project\\\\project\\\\frontend\\\\src\\\\components\\\\form\\\\Input.js\";\nimport React from \"react\";\nimport styles from \"./Form.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  label,\n  type,\n  name,\n  value,\n  onChange,\n  required\n}) => {\n  const countryCodes = [{\n    code: \"+1\",\n    country: \"United States\"\n  }, {\n    code: \"+44\",\n    country: \"United Kingdom\"\n  }, {\n    code: \"+61\",\n    country: \"Australia\"\n  }, {\n    code: \"+49\",\n    country: \"Germany\"\n  }, {\n    code: \"+33\",\n    country: \"France\"\n  }, {\n    code: \"+81\",\n    country: \"Japan\"\n  }, {\n    code: \"+86\",\n    country: \"China\"\n  }, {\n    code: \"+91\",\n    country: \"India\"\n  }, {\n    code: \"+52\",\n    country: \"Mexico\"\n  }, {\n    code: \"+55\",\n    country: \"Brazil\"\n  }, {\n    code: \"+1\",\n    country: \"Canada\"\n  }, {\n    code: \"+7\",\n    country: \"Russia\"\n  }, {\n    code: \"+82\",\n    country: \"South Korea\"\n  }, {\n    code: \"+34\",\n    country: \"Spain\"\n  }, {\n    code: \"+39\",\n    country: \"Italy\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles[\"display-block\"],\n      htmlFor: name,\n      children: [required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles[\"required\"],\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }, this), label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), type === \"select\" && /*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      id: name,\n      value: value,\n      onChange: e => onChange(e),\n      required: required,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        hidden: true,\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), countryCodes.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.code,\n        children: [item.country, \" (\", item.code, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), (type === \"text\" || type === \"email\" || type === \"password\") && /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles[\"display-block\"],\n      type: type,\n      name: name,\n      id: name,\n      value: value,\n      onChange: e => onChange(e),\n      required: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","label","type","name","value","onChange","required","countryCodes","code","country","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","e","disabled","hidden","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Desktop/College/se 4485/Senior Design Project/project/frontend/src/components/form/Input.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Form.module.css\";\r\n\r\nconst Input = ({ label, type, name, value, onChange, required }) => {\r\n  const countryCodes = [\r\n    { code: \"+1\", country: \"United States\" },\r\n    { code: \"+44\", country: \"United Kingdom\" },\r\n    { code: \"+61\", country: \"Australia\" },\r\n    { code: \"+49\", country: \"Germany\" },\r\n    { code: \"+33\", country: \"France\" },\r\n    { code: \"+81\", country: \"Japan\" },\r\n    { code: \"+86\", country: \"China\" },\r\n    { code: \"+91\", country: \"India\" },\r\n    { code: \"+52\", country: \"Mexico\" },\r\n    { code: \"+55\", country: \"Brazil\" },\r\n    { code: \"+1\", country: \"Canada\" },\r\n    { code: \"+7\", country: \"Russia\" },\r\n    { code: \"+82\", country: \"South Korea\" },\r\n    { code: \"+34\", country: \"Spain\" },\r\n    { code: \"+39\", country: \"Italy\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <label className={styles[\"display-block\"]} htmlFor={name}>\r\n        {required && <span className={styles[\"required\"]}>* </span>}\r\n        {label}\r\n      </label>\r\n      {type === \"select\" && (\r\n        <select\r\n          name={name}\r\n          id={name}\r\n          value={value}\r\n          onChange={(e) => onChange(e)}\r\n          required={required}\r\n        >\r\n          <option value=\"\" disabled hidden>\r\n            Select an option\r\n          </option>\r\n          {countryCodes.map((item, index) => (\r\n            <option key={index} value={item.code}>\r\n              {item.country} ({item.code})\r\n            </option>\r\n          ))}\r\n        </select>\r\n      )}\r\n      {(type === \"text\" || type === \"email\" || type === \"password\") && (\r\n        <input\r\n          className={styles[\"display-block\"]}\r\n          type={type}\r\n          name={name}\r\n          id={name}\r\n          value={value}\r\n          onChange={(e) => onChange(e)}\r\n          required={required}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}