{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Desktop\\\\College\\\\SE 4485\\\\Senior Design Project\\\\project\\\\frontend\\\\src\\\\components\\\\pages\\\\calendar\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Header from \"../../header/Header\";\nimport Footer from \"../../footer/Footer\";\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport moment from \"moment\";\nimport SideNav from \"../../sidenav/SideNav\";\nimport styles from \"./Calendar.module.css\";\nimport { AuthContext } from \"../../../helpers/AuthContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst Calendar = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/users/${authState.id}/events`).then(response => {\n      setEvents(response.data.event);\n    }).catch(error => {\n      console.error(\"Error fetching events:\", error);\n    });\n  }, []);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const handleEventClick = event => {\n    const eventId = event.id;\n    navigate(`/calendar/edit`);\n  };\n  const handleEmptyDateClick = date => {\n    navigate(\"/calendar/add\");\n  };\n  const CustomToolbar = () => {\n    const date = new Date(selectedDate);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    const formattedDate = date.toLocaleDateString(\"en-US\", options);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `${formattedDate}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideNav, {\n      calendar: true,\n      setSelectedDate: setSelectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigCalendar, {\n      events: [{\n        title: \"Event #1\",\n        start: new Date(2023, 10, 3),\n        end: new Date(2023, 10, 3)\n      }],\n      localizer: localizer,\n      selectable: true,\n      onSelectEvent: handleEventClick,\n      onSelectSlot: handleEmptyDateClick,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      defaultView: \"day\",\n      defaultDate: new Date(),\n      date: selectedDate,\n      components: {\n        toolbar: CustomToolbar\n      },\n      onNavigate: newDate => setSelectedDate(newDate),\n      className: styles.calendar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"g75RSky0ep71UGk521BNS7O7HQg=\", false, function () {\n  return [useNavigate];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Header","Footer","Calendar","BigCalendar","momentLocalizer","useNavigate","moment","SideNav","styles","AuthContext","axios","jsxDEV","_jsxDEV","localizer","_s","navigate","authState","events","setEvents","get","id","then","response","data","event","catch","error","console","selectedDate","setSelectedDate","Date","handleEventClick","eventId","handleEmptyDateClick","date","CustomToolbar","options","year","month","day","formattedDate","toLocaleDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","calendar","title","start","end","selectable","onSelectEvent","onSelectSlot","startAccessor","endAccessor","defaultView","defaultDate","components","toolbar","onNavigate","newDate","className","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Desktop/College/SE 4485/Senior Design Project/project/frontend/src/components/pages/calendar/Calendar.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport Footer from \"../../footer/Footer\";\r\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport SideNav from \"../../sidenav/SideNav\";\r\nimport styles from \"./Calendar.module.css\";\r\nimport { AuthContext } from \"../../../helpers/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Calendar = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/users/${authState.id}/events`)\r\n      .then((response) => {\r\n        setEvents(response.data.event);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching events:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const handleEventClick = (event) => {\r\n    const eventId = event.id;\r\n    navigate(`/calendar/edit`);\r\n  };\r\n\r\n  const handleEmptyDateClick = (date) => {\r\n    navigate(\"/calendar/add\");\r\n  };\r\n\r\n  const CustomToolbar = () => {\r\n    const date = new Date(selectedDate);\r\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    const formattedDate = date.toLocaleDateString(\"en-US\", options);\r\n    return <div>{`${formattedDate}`}</div>;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <SideNav calendar={true} setSelectedDate={setSelectedDate} />\r\n      <BigCalendar\r\n        events={[\r\n          {\r\n            title: \"Event #1\",\r\n            start: new Date(2023, 10, 3),\r\n            end: new Date(2023, 10, 3),\r\n          },\r\n        ]}\r\n        localizer={localizer}\r\n        selectable={true}\r\n        onSelectEvent={handleEventClick}\r\n        onSelectSlot={handleEmptyDateClick}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        defaultView=\"day\"\r\n        defaultDate={new Date()}\r\n        date={selectedDate}\r\n        components={{ toolbar: CustomToolbar }}\r\n        onNavigate={(newDate) => setSelectedDate(newDate)}\r\n        className={styles.calendar}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}