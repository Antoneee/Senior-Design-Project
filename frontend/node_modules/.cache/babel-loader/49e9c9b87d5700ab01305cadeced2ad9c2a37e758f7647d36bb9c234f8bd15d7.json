{"ast":null,"code":"export default function DateTimeParser(timeStr) {\n  const [hour, minute] = timeStr.split(\":\");\n  const now = new Date(); // Use the current date or set a specific date as needed\n  now.setHours(parseInt(hour, 10));\n  now.setMinutes(parseInt(minute, 10));\n  now.setSeconds(0); // Optionally set seconds to 0\n  return now;\n}\n_c = DateTimeParser;\nvar _c;\n$RefreshReg$(_c, \"DateTimeParser\");","map":{"version":3,"names":["DateTimeParser","timeStr","hour","minute","split","now","Date","setHours","parseInt","setMinutes","setSeconds","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Desktop/College/SE 4485/Senior Design Project/project/frontend/src/helpers/DateToDateTimeParser.js"],"sourcesContent":["export default function DateTimeParser(timeStr) {\r\n  const [hour, minute] = timeStr.split(\":\");\r\n  const now = new Date(); // Use the current date or set a specific date as needed\r\n  now.setHours(parseInt(hour, 10));\r\n  now.setMinutes(parseInt(minute, 10));\r\n  now.setSeconds(0); // Optionally set seconds to 0\r\n  return now;\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,cAAcA,CAACC,OAAO,EAAE;EAC9C,MAAM,CAACC,IAAI,EAAEC,MAAM,CAAC,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;EACzC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;EACxBD,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACN,IAAI,EAAE,EAAE,CAAC,CAAC;EAChCG,GAAG,CAACI,UAAU,CAACD,QAAQ,CAACL,MAAM,EAAE,EAAE,CAAC,CAAC;EACpCE,GAAG,CAACK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,OAAOL,GAAG;AACZ;AAACM,EAAA,GAPuBX,cAAc;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}