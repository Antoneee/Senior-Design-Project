[{"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\index.js":"1","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\App.js":"3","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\helpers\\AuthContext.js":"4","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\remote-viewing\\RemoteViewing.js":"5","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\registration\\Register.js":"6","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\edit-user-profile\\EditProfile.js":"7","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\login\\Login.js":"8","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\calendar\\Calendar.js":"9","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\home\\Home.js":"10","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\error\\NotFound.js":"11","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\error\\Unauthorized.js":"12","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\header\\Header.js":"13","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\footer\\Footer.js":"14","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\form\\Input.js":"15","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\sidenav\\SideNav.js":"16","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\form\\MessageRibbon.js":"17","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\form\\IndicatesRequired.js":"18","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\calendar\\AddCalendar.js":"19","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\calendar\\EditCalendar.js":"20","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\helpers\\DateTimeParser.js":"21"},{"size":664,"mtime":1699935688853,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1697659729505,"results":"24","hashOfConfig":"23"},{"size":2402,"mtime":1699125208195,"results":"25","hashOfConfig":"23"},{"size":89,"mtime":1698287005436,"results":"26","hashOfConfig":"23"},{"size":4606,"mtime":1699936332536,"results":"27","hashOfConfig":"23"},{"size":7665,"mtime":1699127461247,"results":"28","hashOfConfig":"23"},{"size":8933,"mtime":1699128293666,"results":"29","hashOfConfig":"23"},{"size":3930,"mtime":1698439480575,"results":"30","hashOfConfig":"23"},{"size":2528,"mtime":1699120245309,"results":"31","hashOfConfig":"23"},{"size":590,"mtime":1698439164011,"results":"32","hashOfConfig":"23"},{"size":283,"mtime":1698371319083,"results":"33","hashOfConfig":"23"},{"size":320,"mtime":1698370824447,"results":"34","hashOfConfig":"23"},{"size":841,"mtime":1699063869382,"results":"35","hashOfConfig":"23"},{"size":263,"mtime":1697659729499,"results":"36","hashOfConfig":"23"},{"size":1413,"mtime":1699127764267,"results":"37","hashOfConfig":"23"},{"size":1340,"mtime":1699125188477,"results":"38","hashOfConfig":"23"},{"size":284,"mtime":1697659729501,"results":"39","hashOfConfig":"23"},{"size":281,"mtime":1697659729500,"results":"40","hashOfConfig":"23"},{"size":6121,"mtime":1699119839496,"results":"41","hashOfConfig":"23"},{"size":7278,"mtime":1699120953857,"results":"42","hashOfConfig":"23"},{"size":501,"mtime":1699120193728,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1spbhqn",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"50"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\index.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\reportWebVitals.js",[],[],["115"],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\App.js",["116"],[],"import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport EditProfile from \"./components/pages/edit-user-profile/EditProfile\";\r\nimport Login from \"./components/pages/login/Login\";\r\nimport Home from \"./components/pages/home/Home\";\r\nimport Register from \"./components/pages/registration/Register\";\r\nimport { AuthContext } from \"./helpers/AuthContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport NotFound from \"./components/pages/error/NotFound\";\r\nimport Calendar from \"./components/pages/calendar/Calendar\";\r\nimport RemoteViewing from \"./components/pages/remote-viewing/RemoteViewing\";\r\nimport AddCalendar from \"./components/pages/calendar/AddCalendar\";\r\nimport EditCalendar from \"./components/pages/calendar/EditCalendar\";\r\n\r\nfunction App() {\r\n  const [authState, setAuthState] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    email: \"\",\r\n    status: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/auth\", {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          setAuthState({\r\n            ...authState,\r\n            status: false,\r\n          });\r\n        } else {\r\n          setAuthState({\r\n            id: response.data.id,\r\n            name: response.data.name,\r\n            email: response.data.email,\r\n            status: true,\r\n          });\r\n        }\r\n      });\r\n  }, [authState.name]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authState, setAuthState }}>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" exact element={<Home />} />\r\n          <Route path=\"/register\" exact element={<Register />} />\r\n          <Route path=\"/login\" exact element={<Login />} />\r\n          <Route path=\"/profile/edit/:userId\" exact element={<EditProfile />} />\r\n          <Route path=\"/calendar\" exact element={<Calendar />} />\r\n          <Route path=\"/calendar/add\" exact element={<AddCalendar />} />\r\n          <Route\r\n            path=\"/calendar/edit/:eventId\"\r\n            exact\r\n            element={<EditCalendar />}\r\n          />\r\n          <Route path=\"/remote-viewing\" exact element={<RemoteViewing />} />\r\n          <Route path=\"*\" exact element={<NotFound />} />\r\n        </Routes>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\helpers\\AuthContext.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\remote-viewing\\RemoteViewing.js",["117","118","119"],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\registration\\Register.js",["120"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Footer from \"../../footer/Footer\";\r\nimport Header from \"../../header/Header\";\r\nimport SideNav from \"../../sidenav/SideNav\";\r\nimport Input from \"../../form/Input\";\r\nimport styles from \"../../form/Form.module.css\";\r\nimport IndicatesRequired from \"../../form/IndicatesRequired\";\r\nimport MessageRibbon from \"../../form/MessageRibbon\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    first_name: \"\",\r\n    middle_name: \"\",\r\n    last_name: \"\",\r\n    country_name: \"\",\r\n    mobile_phone: \"\",\r\n    work_phone: \"\",\r\n    home_phone: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    verify_password: \"\",\r\n  });\r\n\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n  const [countryCodes, setCountryCodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/countries\")\r\n      .then((response) => {\r\n        setCountryCodes(response.data.countries);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching country codes:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const isValidEmail = (email) => {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(email);\r\n  };\r\n\r\n  const isValidPhoneNumber = (phoneNumber) => {\r\n    const phonePattern = /^[0-9]{10}$/;\r\n    return phonePattern.test(phoneNumber);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const errors = [];\r\n\r\n    const fieldToLablesMap = {\r\n      first_name: \"First name\",\r\n      middle_name: \"Middle name\",\r\n      last_name: \"Last name\",\r\n      country_name: \"Country code\",\r\n      mobile_phone: \"Mobile phone\",\r\n      work_phone: \"Work phone\",\r\n      home_phone: \"Home phone\",\r\n      email: \"Email address\",\r\n      password: \"Password\",\r\n      verify_password: \"Verify password\",\r\n    };\r\n\r\n    // Validation for required fields\r\n    const requiredFields = [\r\n      \"first_name\",\r\n      \"last_name\",\r\n      \"country_name\",\r\n      \"mobile_phone\",\r\n      \"email\",\r\n      \"password\",\r\n      \"verify_password\",\r\n    ];\r\n\r\n    requiredFields.forEach((field) => {\r\n      if (!formData[field]) {\r\n        errors.push(`${fieldToLablesMap[field]} is required.`);\r\n      }\r\n    });\r\n\r\n    // Validation for field lengths\r\n    const fieldsToCheckLength = [\r\n      \"first_name\",\r\n      \"middle_name\",\r\n      \"last_name\",\r\n      \"email\",\r\n      \"password\",\r\n      \"verify_password\",\r\n    ];\r\n    fieldsToCheckLength.forEach((field) => {\r\n      if (formData[field] && formData[field].length > 50) {\r\n        errors.push(\r\n          `${fieldToLablesMap[field]} must be 50 characters or less.`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Validation for phone numbers (mobile, work, home)\r\n    const phoneFields = [\"mobile_phone\", \"work_phone\", \"home_phone\"];\r\n    phoneFields.forEach((field) => {\r\n      if (\r\n        formData[field] &&\r\n        (formData[field].length > 10 || !isValidPhoneNumber(formData[field]))\r\n      ) {\r\n        errors.push(\r\n          `${fieldToLablesMap[field]} must be 10 characters or less and valid.`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Validation for email\r\n    if (formData.email && !isValidEmail(formData.email)) {\r\n      errors.push(\"Invalid email address.\");\r\n    }\r\n\r\n    // Validation for password and verify_password\r\n    if (formData.password !== formData.verify_password) {\r\n      errors.push(\"Passwords do not match.\");\r\n    }\r\n\r\n    if (errors.length === 0) {\r\n      console.log(formData);\r\n      axios\r\n        .post(\"http://localhost:5000/register\", formData)\r\n        .then((response) => {\r\n          navigate(\"/login\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error registering user:\", error);\r\n        });\r\n      setErrorMessages([]);\r\n      setFormData({\r\n        first_name: \"\",\r\n        middle_name: \"\",\r\n        last_name: \"\",\r\n        country_name: \"\",\r\n        mobile_phone: \"\",\r\n        work_phone: \"\",\r\n        home_phone: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        verify_password: \"\",\r\n      });\r\n    } else {\r\n      setErrorMessages(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <MessageRibbon messageList={errorMessages} />\r\n      <IndicatesRequired />\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div className={styles[\"form-container\"]}>\r\n          <div className={styles[\"form-sub-container\"]}>\r\n            <Input\r\n              label={\"First Name\"}\r\n              type={\"text\"}\r\n              name={\"first_name\"}\r\n              value={formData.first_name}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Last Name\"}\r\n              type={\"text\"}\r\n              name={\"last_name\"}\r\n              value={formData.last_name}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Mobile Phone\"}\r\n              type={\"text\"}\r\n              name={\"mobile_phone\"}\r\n              value={formData.mobile_phone}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Home Phone\"}\r\n              type={\"text\"}\r\n              name={\"home_phone\"}\r\n              value={formData.home_phone}\r\n              onChange={handleInputChange}\r\n              required={false}\r\n            />\r\n            <Input\r\n              label={\"Password\"}\r\n              type={\"password\"}\r\n              name={\"password\"}\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className={styles[\"form-sub-container\"]}>\r\n            <Input\r\n              label={\"Middle Name\"}\r\n              type={\"text\"}\r\n              name={\"middle_name\"}\r\n              value={formData.middle_name}\r\n              onChange={handleInputChange}\r\n              required={false}\r\n            />\r\n            <Input\r\n              label={\"Country Code\"}\r\n              type={\"select\"}\r\n              name={\"country_name\"}\r\n              value={formData.country_name}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n              selectItems={countryCodes.map((country) => country.name)}\r\n            />\r\n            <Input\r\n              label={\"Work Phone\"}\r\n              type={\"text\"}\r\n              name={\"work_phone\"}\r\n              value={formData.work_phone}\r\n              onChange={handleInputChange}\r\n              required={false}\r\n            />\r\n            <Input\r\n              label={\"Email Address\"}\r\n              type={\"email\"}\r\n              name={\"email\"}\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Verify Password\"}\r\n              type={\"password\"}\r\n              name={\"verify_password\"}\r\n              value={formData.verify_password}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles[\"button-ribbon\"]}>\r\n          <button>Register</button>\r\n          <a href=\"http://localhost:3000/login\">Need to login?</a>\r\n        </div>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\edit-user-profile\\EditProfile.js",["121","122"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate, Link, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Footer from \"../../footer/Footer\";\r\nimport Header from \"../../header/Header\";\r\nimport SideNav from \"../../sidenav/SideNav\";\r\nimport Input from \"../../form/Input\";\r\nimport styles from \"../../form/Form.module.css\";\r\nimport IndicatesRequired from \"../../form/IndicatesRequired\";\r\nimport MessageRibbon from \"../../form/MessageRibbon\";\r\nimport { AuthContext } from \"../../../helpers/AuthContext\";\r\n\r\nconst EditUserProfile = () => {\r\n  const { userId } = useParams();\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    first_name: \"\",\r\n    middle_name: \"\",\r\n    last_name: \"\",\r\n    country_name: \"\",\r\n    mobile_phone: \"\",\r\n    work_phone: \"\",\r\n    home_phone: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n  const [countryCodes, setCountryCodes] = useState([]);\r\n\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/countries\")\r\n      .then((response) => {\r\n        setCountryCodes(response.data.countries);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching country codes:\", error);\r\n      });\r\n    axios\r\n      .get(`http://localhost:5000/users/${userId}`)\r\n      .then((response) => {\r\n        const data = response.data.user[0];\r\n\r\n        const country = countryCodes.find(\r\n          (country) => country.id === data.country_id\r\n        );\r\n        if (country) {\r\n          setFormData({\r\n            first_name: data.first_name,\r\n            middle_name: data.middle_name !== \"null\" ? data.middle_name : \"\",\r\n            last_name: data.last_name,\r\n            country_name: country.name,\r\n            mobile_phone: data.mobile_phone,\r\n            work_phone: data.work_phone !== \"null\" ? data.work_phone : \"\",\r\n            home_phone: data.home_phone !== \"null\" ? data.home_phone : \"\",\r\n            email: data.email,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching user:\", error);\r\n      });\r\n  }, [countryCodes.length]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const isValidEmail = (email) => {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(email);\r\n  };\r\n\r\n  const isValidPhoneNumber = (phoneNumber) => {\r\n    const phonePattern = /^[0-9]{10}$/;\r\n    return phonePattern.test(phoneNumber);\r\n  };\r\n\r\n  const handleDeleteModal = () => {\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    axios\r\n      .delete(`http://localhost:5000/users/${authState.id}`)\r\n      .then((response) => {\r\n        navigate(\"/login\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting event:\", error);\r\n      });\r\n  };\r\n\r\n  const declineDelete = () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const errors = [];\r\n\r\n    const fieldToLablesMap = {\r\n      first_name: \"First name\",\r\n      middle_name: \"Middle name\",\r\n      last_name: \"Last name\",\r\n      country_name: \"Country code\",\r\n      mobile_phone: \"Mobile phone\",\r\n      work_phone: \"Work phone\",\r\n      home_phone: \"Home phone\",\r\n      email: \"Email address\",\r\n    };\r\n\r\n    // Validation for required fields\r\n    const requiredFields = [\r\n      \"first_name\",\r\n      \"last_name\",\r\n      \"country_name\",\r\n      \"mobile_phone\",\r\n      \"email\",\r\n    ];\r\n\r\n    requiredFields.forEach((field) => {\r\n      if (!formData[field]) {\r\n        errors.push(`${fieldToLablesMap[field]} is required.`);\r\n      }\r\n    });\r\n\r\n    // Validation for field lengths\r\n    const fieldsToCheckLength = [\r\n      \"first_name\",\r\n      \"middle_name\",\r\n      \"last_name\",\r\n      \"email\",\r\n    ];\r\n    fieldsToCheckLength.forEach((field) => {\r\n      if (formData[field] && formData[field].length > 50) {\r\n        errors.push(\r\n          `${fieldToLablesMap[field]} must be 50 characters or less.`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Validation for phone numbers (mobile, work, home)\r\n    const phoneFields = [\"mobile_phone\", \"work_phone\", \"home_phone\"];\r\n    phoneFields.forEach((field) => {\r\n      if (\r\n        formData[field] &&\r\n        (formData[field].length > 10 || !isValidPhoneNumber(formData[field]))\r\n      ) {\r\n        errors.push(\r\n          `${fieldToLablesMap[field]} must be 10 characters or less and valid.`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Validation for email\r\n    if (formData.email && !isValidEmail(formData.email)) {\r\n      errors.push(\"Invalid email address.\");\r\n    }\r\n\r\n    if (errors.length === 0) {\r\n      axios\r\n        .put(`http://localhost:5000/users/${userId}`, formData)\r\n        .then((response) => {\r\n          navigate(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating user:\", error);\r\n        });\r\n      setErrorMessages([]);\r\n      setFormData({\r\n        first_name: \"\",\r\n        middle_name: \"\",\r\n        last_name: \"\",\r\n        country_name: \"\",\r\n        mobile_phone: \"\",\r\n        work_phone: \"\",\r\n        home_phone: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        verify_password: \"\",\r\n      });\r\n    } else {\r\n      setErrorMessages(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <h1>Edit Profile</h1>\r\n      <MessageRibbon messageList={errorMessages} />\r\n      <IndicatesRequired />\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div className={styles[\"form-container\"]}>\r\n          <div className={styles[\"form-sub-container\"]}>\r\n            <Input\r\n              label={\"First Name\"}\r\n              type={\"text\"}\r\n              name={\"first_name\"}\r\n              value={formData.first_name}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Last Name\"}\r\n              type={\"text\"}\r\n              name={\"last_name\"}\r\n              value={formData.last_name}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Mobile Phone\"}\r\n              type={\"text\"}\r\n              name={\"mobile_phone\"}\r\n              value={formData.mobile_phone}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Home Phone\"}\r\n              type={\"text\"}\r\n              name={\"home_phone\"}\r\n              value={formData.home_phone}\r\n              onChange={handleInputChange}\r\n              required={false}\r\n            />\r\n          </div>\r\n          <div className={styles[\"form-sub-container\"]}>\r\n            <Input\r\n              label={\"Middle Name\"}\r\n              type={\"text\"}\r\n              name={\"middle_name\"}\r\n              value={formData.middle_name}\r\n              onChange={handleInputChange}\r\n              required={false}\r\n            />\r\n            <Input\r\n              label={\"Country Code\"}\r\n              type={\"select\"}\r\n              name={\"country_name\"}\r\n              value={formData.country_name}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n              selectItems={countryCodes.map((country) => country.name)}\r\n            />\r\n            <Input\r\n              label={\"Work Phone\"}\r\n              type={\"text\"}\r\n              name={\"work_phone\"}\r\n              value={formData.work_phone}\r\n              onChange={handleInputChange}\r\n              required={false}\r\n            />\r\n            <Input\r\n              label={\"Email Address\"}\r\n              type={\"email\"}\r\n              name={\"email\"}\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles[\"button-ribbon\"]}>\r\n          <button type=\"submit\">Save</button>\r\n          <button type=\"button\" onClick={handleDeleteModal}>\r\n            Unregister\r\n          </button>\r\n          <Link to=\"/\">Cancel</Link>\r\n        </div>\r\n      </form>\r\n      {deleteModal && (\r\n        <div className={styles[\"modal\"]}>\r\n          <div className={styles[\"modal-content\"]}>\r\n            <h2 className={styles[\"modal-heading\"]}>Are you sure?</h2>\r\n            <p className={styles[\"modal-text\"]}>\r\n              You are about to permanently delete your user profile. This action\r\n              cannot be undone.\r\n            </p>\r\n            <button onClick={confirmDelete}>Yes</button>\r\n            <button onClick={declineDelete}>No</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUserProfile;\r\n","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\login\\Login.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\calendar\\Calendar.js",["123"],[],"import React from \"react\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport Footer from \"../../footer/Footer\";\r\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport SideNav from \"../../sidenav/SideNav\";\r\nimport styles from \"./Calendar.module.css\";\r\nimport { AuthContext } from \"../../../helpers/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { DateToDateTimeParser } from \"../../../helpers/DateTimeParser\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Calendar = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/users/${authState.id}/events`)\r\n      .then((response) => {\r\n        setEvents(response.data.events);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching events:\", error);\r\n      });\r\n  }, [authState.name]);\r\n\r\n  const handleEventClick = (event) => {\r\n    navigate(`/calendar/edit/${event.id}`);\r\n  };\r\n\r\n  const handleEmptyDateClick = (date) => {\r\n    navigate(\"/calendar/add\");\r\n  };\r\n\r\n  const CustomToolbar = () => {\r\n    const date = new Date(selectedDate);\r\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    const formattedDate = date.toLocaleDateString(\"en-US\", options);\r\n    return <div>{`${formattedDate}`}</div>;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <SideNav calendar={true} setSelectedDate={setSelectedDate} />\r\n      <BigCalendar\r\n        events={events.map((event) => ({\r\n          ...event,\r\n          start_time: DateToDateTimeParser(event.start_time),\r\n          end_time: DateToDateTimeParser(event.end_time),\r\n        }))}\r\n        localizer={localizer}\r\n        selectable={true}\r\n        onSelectEvent={handleEventClick}\r\n        onSelectSlot={handleEmptyDateClick}\r\n        startAccessor=\"start_time\"\r\n        endAccessor=\"end_time\"\r\n        defaultView=\"day\"\r\n        defaultDate={new Date()}\r\n        date={selectedDate}\r\n        components={{ toolbar: CustomToolbar }}\r\n        onNavigate={(newDate) => setSelectedDate(newDate)}\r\n        className={styles.calendar}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\home\\Home.js",["124","125"],[],"import React, { useEffect, useContext } from \"react\";\r\nimport SideNav from \"../../sidenav/SideNav\";\r\nimport Footer from \"../../footer/Footer\";\r\nimport Header from \"../../header/Header\";\r\nimport styles from \"./Home.module.css\";\r\nimport { AuthContext } from \"../../../helpers/AuthContext\";\r\nimport Unauthorized from \"../error/Unauthorized\";\r\n\r\nconst Home = () => {\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  return authState.status ? (\r\n    <div>\r\n      <Header />\r\n      <SideNav />\r\n      <Footer />\r\n    </div>\r\n  ) : (\r\n    <Unauthorized />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\error\\NotFound.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\error\\Unauthorized.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\header\\Header.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\footer\\Footer.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\form\\Input.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\sidenav\\SideNav.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\form\\MessageRibbon.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\form\\IndicatesRequired.js",[],[],"C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\calendar\\AddCalendar.js",["126"],[],"import React from \"react\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport Footer from \"../../footer/Footer\";\r\nimport IndicatesRequired from \"../../form/IndicatesRequired\";\r\nimport MessageRibbon from \"../../form/MessageRibbon\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport Input from \"../../form/Input\";\r\nimport formStyles from \"../../form/Form.module.css\";\r\nimport { AuthContext } from \"../../../helpers/AuthContext\";\r\nimport calendarStyles from \"./Calendar.module.css\";\r\n\r\nconst AddCalendar = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    event_date: \"\",\r\n    start_time: \"\",\r\n    end_time: \"\",\r\n    reminder_interval: \"\",\r\n    invitees: [],\r\n  });\r\n\r\n  const [otherUsers, setOtherUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/users/exclude/${authState.id}`)\r\n      .then((response) => {\r\n        setOtherUsers(response.data.users);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching other users:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const reminderIntervals = [\"None\"];\r\n\r\n  for (let minutes = 5; minutes <= 60; minutes += 5) {\r\n    reminderIntervals.push(minutes);\r\n  }\r\n\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const addInvitee = (userId) => {\r\n    if (!formData.invitees.includes(userId)) {\r\n      setFormData({ ...formData, invitees: [...formData.invitees, userId] });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const errors = [];\r\n\r\n    const fieldToLablesMap = {\r\n      title: \"Title\",\r\n      event_date: \"Date\",\r\n      start_time: \"Start Time\",\r\n      end_time: \"End Time\",\r\n      invitees: \"Invitees\",\r\n      reminder_interval: \"Reminder\",\r\n    };\r\n\r\n    // Validation for required fields\r\n    const requiredFields = [\r\n      \"title\",\r\n      \"event_date\",\r\n      \"start_time\",\r\n      \"end_time\",\r\n      \"invitees\",\r\n    ];\r\n\r\n    requiredFields.forEach((field) => {\r\n      if (!formData[field]) {\r\n        errors.push(`${fieldToLablesMap[field]} is required.`);\r\n      }\r\n    });\r\n\r\n    // Validation for field lengths\r\n    const fieldsToCheckLength = [\"title\"];\r\n    fieldsToCheckLength.forEach((field) => {\r\n      if (formData[field] && formData[field].length > 50) {\r\n        errors.push(\r\n          `${fieldToLablesMap[field]} must be 50 characters or less.`\r\n        );\r\n      }\r\n    });\r\n\r\n    formData.invitees = \"{\" + formData.invitees.join(\",\") + \"}\";\r\n\r\n    if (formData.reminder_interval === \"None\") formData.reminder_interval = 0;\r\n\r\n    if (errors.length === 0) {\r\n      axios\r\n        .post(`http://localhost:5000/users/${authState.id}/events`, formData)\r\n        .then((response) => {\r\n          if (!response.data.error) {\r\n            setErrorMessages([]);\r\n            setFormData({\r\n              email: \"\",\r\n              password: \"\",\r\n            });\r\n            navigate(\"/calendar\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          errors.push(\"Failed to add event.\");\r\n          setErrorMessages(errors);\r\n          console.error(\"Error adding event:\", error);\r\n        });\r\n    } else {\r\n      setErrorMessages(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <h1>Add Calendar Event</h1>\r\n      <MessageRibbon messageList={errorMessages} />\r\n      <IndicatesRequired />\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div className={formStyles[\"form-container\"]}>\r\n          <div className={formStyles[\"form-sub-container\"]}>\r\n            <Input\r\n              label={\"Title\"}\r\n              type={\"text\"}\r\n              name={\"title\"}\r\n              value={formData.title}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Date\"}\r\n              type={\"date\"}\r\n              name={\"event_date\"}\r\n              value={formData.event_date}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Start Time\"}\r\n              type={\"time\"}\r\n              name={\"start_time\"}\r\n              value={formData.start_time}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"End Time\"}\r\n              type={\"time\"}\r\n              name={\"end_time\"}\r\n              value={formData.end_time}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <label>\r\n              <span className={formStyles[\"required\"]}>* </span>Invitees\r\n            </label>\r\n            <ul className={calendarStyles.invitees}>\r\n              {otherUsers.map((otherUser) => {\r\n                return (\r\n                  <li\r\n                    className={\r\n                      formData.invitees.includes(otherUser.id)\r\n                        ? `${calendarStyles.selected}`\r\n                        : \"\"\r\n                    }\r\n                    onClick={() => addInvitee(otherUser.id)}\r\n                    key={otherUser.id}\r\n                  >\r\n                    {otherUser.first_name}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <Input\r\n              label={\"Reminder\"}\r\n              type={\"select\"}\r\n              name={\"reminder_interval\"}\r\n              value={formData.reminder_interval}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n              selectItems={reminderIntervals}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={formStyles[\"button-ribbon\"]}>\r\n          <button>Save</button>\r\n          <Link to=\"/calendar\">Cancel</Link>\r\n        </div>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCalendar;\r\n","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\components\\pages\\calendar\\EditCalendar.js",["127"],[],"import React from \"react\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../../helpers/AuthContext\";\r\nimport Header from \"../../header/Header\";\r\nimport MessageRibbon from \"../../form/MessageRibbon\";\r\nimport IndicatesRequired from \"../../form/IndicatesRequired\";\r\nimport Input from \"../../form/Input\";\r\nimport Footer from \"../../footer/Footer\";\r\nimport formStyles from \"../../form/Form.module.css\";\r\nimport calendarStyles from \"./Calendar.module.css\";\r\nimport { DateTimeToDateParser } from \"../../../helpers/DateTimeParser\";\r\n\r\nconst EditCalender = () => {\r\n  const { eventId } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    event_date: \"\",\r\n    start_time: \"\",\r\n    end_time: \"\",\r\n    reminder_interval: \"\",\r\n    invitees: [],\r\n  });\r\n\r\n  const [otherUsers, setOtherUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/users/${authState.id}/events/${eventId}`)\r\n      .then((response) => {\r\n        const data = response.data.event[0];\r\n        setFormData({\r\n          title: data.title,\r\n          event_date: DateTimeToDateParser(data.event_date),\r\n          start_time: data.start_time,\r\n          end_time: data.end_time,\r\n          reminder_interval: data.reminder_interval,\r\n          invitees: data.invitees,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching events:\", error);\r\n      });\r\n    axios\r\n      .get(`http://localhost:5000/users/exclude/${authState.id}`)\r\n      .then((response) => {\r\n        setOtherUsers(response.data.users);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching other users:\", error);\r\n      });\r\n  }, [authState.name]);\r\n\r\n  const reminderIntervals = [\"None\"];\r\n\r\n  for (let minutes = 5; minutes <= 60; minutes += 5) {\r\n    reminderIntervals.push(minutes);\r\n  }\r\n\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const addInvitee = (userId) => {\r\n    if (!formData.invitees.includes(userId)) {\r\n      setFormData({ ...formData, invitees: [...formData.invitees, userId] });\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    axios\r\n      .delete(`http://localhost:5000/users/${authState.id}/events/${eventId}`)\r\n      .then((response) => {\r\n        navigate(\"/calendar\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting event:\", error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const errors = [];\r\n\r\n    const fieldToLablesMap = {\r\n      title: \"Title\",\r\n      event_date: \"Date\",\r\n      start_time: \"Start Time\",\r\n      end_time: \"End Time\",\r\n      invitees: \"Invitees\",\r\n      reminder_interval: \"Reminder\",\r\n    };\r\n\r\n    // Validation for required fields\r\n    const requiredFields = [\r\n      \"title\",\r\n      \"event_date\",\r\n      \"start_time\",\r\n      \"end_time\",\r\n      \"invitees\",\r\n    ];\r\n\r\n    requiredFields.forEach((field) => {\r\n      if (!formData[field]) {\r\n        errors.push(`${fieldToLablesMap[field]} is required.`);\r\n      }\r\n    });\r\n\r\n    // Validation for field lengths\r\n    const fieldsToCheckLength = [\"title\"];\r\n    fieldsToCheckLength.forEach((field) => {\r\n      if (formData[field] && formData[field].length > 50) {\r\n        errors.push(\r\n          `${fieldToLablesMap[field]} must be 50 characters or less.`\r\n        );\r\n      }\r\n    });\r\n\r\n    formData.invitees = \"{\" + formData.invitees.join(\",\") + \"}\";\r\n\r\n    if (formData.reminder_interval === \"None\") formData.reminder_interval = 0;\r\n\r\n    if (errors.length === 0) {\r\n      axios\r\n        .put(\r\n          `http://localhost:5000/users/${authState.id}/events/${eventId}`,\r\n          formData\r\n        )\r\n        .then((response) => {\r\n          if (!response.data.error) {\r\n            setErrorMessages([]);\r\n            setFormData({\r\n              email: \"\",\r\n              password: \"\",\r\n            });\r\n            navigate(\"/calendar\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          errors.push(\"Failed to update event.\");\r\n          setErrorMessages(errors);\r\n          console.error(\"Error updating event:\", error);\r\n        });\r\n    } else {\r\n      setErrorMessages(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <h1>Edit Calendar Event</h1>\r\n      <MessageRibbon messageList={errorMessages} />\r\n      <IndicatesRequired />\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div className={formStyles[\"form-container\"]}>\r\n          <div className={formStyles[\"form-sub-container\"]}>\r\n            <Input\r\n              label={\"Title\"}\r\n              type={\"text\"}\r\n              name={\"title\"}\r\n              value={formData.title}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Date\"}\r\n              type={\"date\"}\r\n              name={\"event_date\"}\r\n              value={formData.event_date}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"Start Time\"}\r\n              type={\"time\"}\r\n              name={\"start_time\"}\r\n              value={formData.start_time}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <Input\r\n              label={\"End Time\"}\r\n              type={\"time\"}\r\n              name={\"end_time\"}\r\n              value={formData.end_time}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n            />\r\n            <label>\r\n              <span className={formStyles[\"required\"]}>* </span>Invitees\r\n            </label>\r\n            <ul className={calendarStyles.invitees}>\r\n              {otherUsers.map((otherUser) => {\r\n                return (\r\n                  <li\r\n                    className={\r\n                      formData.invitees.includes(otherUser.id)\r\n                        ? `${calendarStyles.selected}`\r\n                        : \"\"\r\n                    }\r\n                    onClick={() => addInvitee(otherUser.id)}\r\n                    key={otherUser.id}\r\n                  >\r\n                    {otherUser.first_name}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <Input\r\n              label={\"Reminder\"}\r\n              type={\"select\"}\r\n              name={\"reminder_interval\"}\r\n              value={formData.reminder_interval}\r\n              onChange={handleInputChange}\r\n              required={true}\r\n              selectItems={reminderIntervals}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={formStyles[\"button-ribbon\"]}>\r\n          <button type=\"submit\">Save</button>\r\n          <button type=\"button\" onClick={handleDelete}>\r\n            Delete\r\n          </button>\r\n          <Link to=\"/calendar\">Cancel</Link>\r\n        </div>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCalender;\r\n","C:\\Users\\Anthony\\Desktop\\College\\SE 4485\\Senior Design Project\\project\\frontend\\src\\helpers\\DateTimeParser.js",[],[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":45,"column":6,"nodeType":"132","endLine":45,"endColumn":22,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"138","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":14},{"ruleId":"134","severity":1,"message":"139","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":15},{"ruleId":"134","severity":1,"message":"139","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":15},{"ruleId":"134","severity":1,"message":"139","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":15},{"ruleId":"130","severity":1,"message":"140","line":69,"column":6,"nodeType":"132","endLine":69,"endColumn":27,"suggestions":"141"},{"ruleId":"130","severity":1,"message":"142","line":35,"column":6,"nodeType":"132","endLine":35,"endColumn":22,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"144","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"145","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"130","severity":1,"message":"142","line":39,"column":6,"nodeType":"132","endLine":39,"endColumn":8,"suggestions":"146"},{"ruleId":"130","severity":1,"message":"147","line":58,"column":6,"nodeType":"132","endLine":58,"endColumn":22,"suggestions":"148"},"no-new-object",["149"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["150"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'SideNav' is defined but never used.","React Hook useEffect has missing dependencies: 'countryCodes' and 'userId'. Either include them or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'authState.id'. Either include it or remove the dependency array.",["152"],"'useEffect' is defined but never used.","'styles' is defined but never used.",["153"],"React Hook useEffect has missing dependencies: 'authState.id' and 'eventId'. Either include them or remove the dependency array.",["154"],"no-object-constructor",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [authState, authState.name]",{"range":"165","text":"166"},"Update the dependencies array to be: [countryCodes, countryCodes.length, userId]",{"range":"167","text":"168"},"Update the dependencies array to be: [authState.id, authState.name]",{"range":"169","text":"170"},"Update the dependencies array to be: [authState.id]",{"range":"171","text":"172"},"Update the dependencies array to be: [authState.id, authState.name, eventId]",{"range":"173","text":"174"},[1495,1511],"[authState, authState.name]",[2257,2278],"[countryCodes, countryCodes.length, userId]",[1201,1217],"[authState.id, authState.name]",[1222,1224],"[authState.id]",[1907,1923],"[authState.id, authState.name, eventId]"]